/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package funpref.view;

import com.itextpdf.io.font.FontConstants;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.layout.element.List;
import com.itextpdf.layout.element.ListItem;
import com.itextpdf.layout.Document;
import funpref.controller.ContentSearchTable;
import funpref.controller.FUNPREFController;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import funpref.model.Dependent;
import funpref.model.Beneficiary;
import funpref.model.dao.BenefitTypeDAO;
import funpref.model.dao.CityDAO;
import funpref.model.dao.ContentSearchTableItensDAO;
import funpref.model.dao.DeficiencyDAO;
import funpref.model.dao.DegreeEducationDAO;
import funpref.model.dao.IssuingBodyDAO;
import funpref.model.dao.KinshipDAO;
import funpref.model.dao.MaritalStatusDAO;
import funpref.model.dao.ProvinceDAO;
import funpref.model.dao.StockingOrganDAO;
import funpref.model.dao.UserDAO;
import java.awt.Desktop;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Period;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Robson
 */
public class FUNPREFJFrame extends javax.swing.JFrame {

    private boolean updatingSourceBeneficiary;

    public enum DependentCRUD { CREATE, READ, UPDATE, DELETE };
    public enum BeneficiaryCRUD { NEW, EDIT, READ };
    
    private AboutJFrame aboutJFrame;
    FUNPREFController funprefController;
    private final SimpleDateFormat formatDate;    
    
    private DependentCRUD dependentCRUDMode;    
    public BeneficiaryCRUD beneficiaryCRUDMode;
    
    private Beneficiary currentBeneficiary;

    /**table
     * Creates new form FUNPREFJFrame
     */
    public FUNPREFJFrame() {
        formatDate = new SimpleDateFormat("dd/MM/yyyy");
        initComponents();        
        setLocationRelativeTo( null );        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem5 = new javax.swing.JMenuItem();
        jLabel67 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        searchJInternalFrame = new javax.swing.JInternalFrame();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        beneficiaryCRUDJInternalFrame = new javax.swing.JInternalFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jFormattedTextField6 = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        jFormattedTextField7 = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel25 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jComboBox9 = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox<>();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jTextField41 = new javax.swing.JTextField();
        jTextField42 = new javax.swing.JTextField();
        jFormattedTextField5 = new javax.swing.JFormattedTextField();
        jLabel68 = new javax.swing.JLabel();
        jComboBox17 = new javax.swing.JComboBox<>();
        jLabel79 = new javax.swing.JLabel();
        jTextField47 = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel40 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField26 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel46 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jLabel48 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jLabel50 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jTextField30 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jCheckBox6 = new javax.swing.JCheckBox();
        jLabel54 = new javax.swing.JLabel();
        jTextField31 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel55 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jTextField33 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jTextField34 = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jTextField36 = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jTextField37 = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jTextField39 = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        jTextField40 = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jComboBox12 = new javax.swing.JComboBox<>();
        jSeparator4 = new javax.swing.JSeparator();
        jComboBox13 = new javax.swing.JComboBox<>();
        jComboBox14 = new javax.swing.JComboBox<>();
        jComboBox15 = new javax.swing.JComboBox<>();
        jLabel75 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jTextField43 = new javax.swing.JTextField();
        jTextField44 = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jTextField45 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        jComboBox11 = new javax.swing.JComboBox<>();
        jLabel72 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jTextField46 = new javax.swing.JTextField();
        jComboBox16 = new javax.swing.JComboBox<>();
        jLabel78 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jTextField48 = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        jTextField49 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dependentsJTable = new javax.swing.JTable();
        readDependentJButton = new javax.swing.JButton();
        createDependentJButton = new javax.swing.JButton();
        updateDependentJButton = new javax.swing.JButton();
        deleteDependentJButton = new javax.swing.JButton();
        dependentCRUDJInternalFrame = new javax.swing.JInternalFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        jFormattedTextField8 = new javax.swing.JFormattedTextField();
        jLabel38 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jTextField38 = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jComboBox18 = new javax.swing.JComboBox<>();
        jLabel81 = new javax.swing.JLabel();
        incomeTaxJInternalFrame = new javax.swing.JInternalFrame();
        jPanel7 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        incomeTaxJTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        jMenuItem5.setText("jMenuItem5");

        jLabel67.setText("jLabel67");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("FUNPREF");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });

        jButton1.setText("Ver beneficiário");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setText("Imprimir");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addContainerGap(1028, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchJInternalFrame.setClosable(true);
        searchJInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        searchJInternalFrame.setTitle("Tela de pesquisa");
        searchJInternalFrame.setVisible(false);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisa");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "matrícula", "nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Selecionar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout searchJInternalFrameLayout = new javax.swing.GroupLayout(searchJInternalFrame.getContentPane());
        searchJInternalFrame.getContentPane().setLayout(searchJInternalFrameLayout);
        searchJInternalFrameLayout.setHorizontalGroup(
            searchJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchJInternalFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addGroup(searchJInternalFrameLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        searchJInternalFrameLayout.setVerticalGroup(
            searchJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchJInternalFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDesktopPane1.add(searchJInternalFrame);
        searchJInternalFrame.setBounds(350, 40, 570, 440);

        beneficiaryCRUDJInternalFrame.setClosable(true);
        beneficiaryCRUDJInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        beneficiaryCRUDJInternalFrame.setTitle("Beneficiário");
        beneficiaryCRUDJInternalFrame.setPreferredSize(new java.awt.Dimension(980, 620));
        beneficiaryCRUDJInternalFrame.setVisible(false);
        beneficiaryCRUDJInternalFrame.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                beneficiaryCRUDJInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jTabbedPane2.setPreferredSize(new java.awt.Dimension(950, 489));

        jPanel3.setPreferredSize(new java.awt.Dimension(900, 456));

        jLabel2.setText("portaria:");

        jLabel3.setText("nome:");

        jLabel4.setText("tipo do benefício:");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("forma de cálculo:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "anos" }));
        jComboBox2.setSelectedIndex(-1);

        jLabel6.setText("cargo:");

        jLabel7.setText("sexo:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "masculino", "feminino" }));
        jComboBox3.setSelectedIndex(-1);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel8.setText("orgão de lotação:");

        jLabel9.setText("data de admissão:");

        jLabel10.setText("data de inativação:");

        jLabel11.setText("RG:");

        jLabel12.setText("CPF:");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel13.setText("data de nascimento:");

        jLabel14.setText("nome da mãe:");

        jLabel15.setText("nome do pai:");

        jLabel16.setText("tempo de contribuição:");

        jTextField9.setEditable(false);
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jLabel17.setText("tempo de contribuição (FUNPREF):");

        jTextField10.setEditable(false);

        jLabel18.setText("tempo de inatividade:");

        jTextField11.setEditable(false);

        jLabel19.setText("data de óbito:");

        jLabel20.setText("órgão de emissão:");

        jLabel21.setText("data de requerimento:");

        jLabel22.setText("data do laudo de invalidez:");

        jLabel23.setText("motivo de invalidez:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton4.setText("Fechar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Imprimir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel24.setText("falecido:");

        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel25.setText("matrícula:");

        jLabel26.setText("estado civil:");

        jButton8.setText("Salvar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel64.setText("UF");

        jLabel65.setText("cpf da mãe:");

        jLabel66.setText("cpf do pai:");

        jLabel68.setText("data de emissão:");

        jLabel79.setText("deficiência:");

        jLabel80.setText("matrícula (ativo):");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox17, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel79))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jFormattedTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel65)
                                    .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel66)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel80)
                                    .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jLabel24))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel68)
                                    .addComponent(jFormattedTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel64))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))))
                        .addContainerGap(56, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel24)
                            .addComponent(jLabel19)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel64)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(jLabel66))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel80))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel79))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton8))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados 1", jPanel3);

        jPanel5.setPreferredSize(new java.awt.Dimension(950, 461));

        jLabel27.setText("endereço:");

        jLabel28.setText("cidade:");

        jLabel29.setText("fone1:");

        jLabel30.setText("fone2:");

        jLabel31.setText("CEP:");

        jLabel32.setText("email:");

        jLabel33.setText("gaveta de documentos físicos:");

        jLabel40.setText("agência BB:");

        jLabel41.setText("conta corrente:");

        jLabel42.setText("proventos - inativos (R$):");

        jLabel43.setText("promoção antiga:");

        jLabel44.setText("valor (R$):");

        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel45.setText("pó de giz:");

        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel46.setText("percentual:");

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10%", "20%" }));
        jComboBox8.setSelectedIndex(-1);

        jLabel47.setText("anuênio:");

        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jLabel48.setText("percentual (%):");

        jLabel49.setText("quinquênio:");

        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jLabel50.setText("percentua (%)l:");

        jLabel51.setText("valor (R$):");

        jLabel52.setText("valor (R$):");

        jLabel53.setText("empréstimo consignado:");

        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jLabel54.setText("valor (R$):");

        jButton6.setText("ver detalhes");

        jLabel55.setText("alicota do I.R.R.F.:");

        jLabel56.setText("valor (R$):");

        jLabel57.setText("valor (R$):");

        jLabel58.setText("valor bruto (R$):");

        jLabel59.setText("descontos (R$):");

        jLabel60.setText("valor líquido (R$):");

        jLabel62.setText("código da pasta física:");

        jLabel63.setText("nacionalidade:");

        jLabel73.setText("cidade de naturalidade:");

        jLabel74.setText("UF:");

        jComboBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox12ActionPerformed(evt);
            }
        });

        jComboBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox13ActionPerformed(evt);
            }
        });

        jComboBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox15ActionPerformed(evt);
            }
        });

        jLabel75.setText("UF:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel40)
                                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel42)
                                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(jCheckBox2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel45)
                                    .addComponent(jCheckBox3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel46)
                                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel51)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel47)
                                            .addComponent(jCheckBox4))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel48))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel57)
                                            .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel49)
                                            .addComponent(jCheckBox5))
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel50)
                                            .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel53)
                                            .addComponent(jCheckBox6))
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel54))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton6)
                                        .addGap(27, 27, 27)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel58))))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel52)
                                            .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel55)
                                            .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel56)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel59)
                                            .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel60)))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel63))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel74)
                                    .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel73)
                                    .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel32)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel33)
                                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel62)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel75)
                                    .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 69, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel40)
                                        .addComponent(jLabel41)
                                        .addComponent(jLabel42))
                                    .addComponent(jLabel43))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel45))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel47)
                                .addComponent(jLabel48))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel57)
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel50)
                                    .addComponent(jLabel52)
                                    .addComponent(jLabel55)
                                    .addComponent(jLabel56))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel59)
                        .addComponent(jLabel58)
                        .addComponent(jLabel53)
                        .addComponent(jLabel54))
                    .addComponent(jLabel60, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6)
                        .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(jLabel74))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel73)
                        .addGap(33, 33, 33)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(33, 33, 33))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel75)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addGap(32, 32, 32)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados 2", jPanel5);

        jLabel69.setText("título de eleitor:");

        jLabel70.setText("zona eleitoral:");

        jLabel71.setText("seção eleitoral:");

        jComboBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox11ActionPerformed(evt);
            }
        });

        jLabel72.setText("UF:");

        jLabel77.setText("PIS/PASEP:");

        jLabel78.setText("grau de formação:");

        jLabel82.setText("matrícula do beneficiário de origem:");

        jTextField48.setEditable(false);

        jLabel83.setText("nome do beneficiário de origem:");

        jTextField49.setEditable(false);

        jButton13.setText("escolher");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel69)
                            .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel70)
                            .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel71))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel72)
                            .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel78)
                            .addComponent(jComboBox16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel82)
                            .addComponent(jTextField48, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jTextField49, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton13))
                            .addComponent(jLabel83))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jLabel70)
                    .addComponent(jLabel71)
                    .addComponent(jLabel72)
                    .addComponent(jLabel77)
                    .addComponent(jLabel78))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel82)
                    .addComponent(jLabel83))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13))
                .addContainerGap(446, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dados 3", jPanel8);

        jPanel4.setPreferredSize(new java.awt.Dimension(950, 334));

        dependentsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "código", "nome", "parentesco"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(dependentsJTable);
        if (dependentsJTable.getColumnModel().getColumnCount() > 0) {
            dependentsJTable.getColumnModel().getColumn(0).setResizable(false);
            dependentsJTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            dependentsJTable.getColumnModel().getColumn(1).setResizable(false);
            dependentsJTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            dependentsJTable.getColumnModel().getColumn(2).setResizable(false);
            dependentsJTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        readDependentJButton.setText("Ver");
        readDependentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readDependentJButtonActionPerformed(evt);
            }
        });

        createDependentJButton.setText("Incluir");
        createDependentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDependentJButtonActionPerformed(evt);
            }
        });

        updateDependentJButton.setText("Editar");
        updateDependentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDependentJButtonActionPerformed(evt);
            }
        });

        deleteDependentJButton.setText("Remover");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(readDependentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDependentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDependentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteDependentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(readDependentJButton)
                        .addGap(18, 18, 18)
                        .addComponent(createDependentJButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateDependentJButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteDependentJButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Dependentes", jPanel4);

        javax.swing.GroupLayout beneficiaryCRUDJInternalFrameLayout = new javax.swing.GroupLayout(beneficiaryCRUDJInternalFrame.getContentPane());
        beneficiaryCRUDJInternalFrame.getContentPane().setLayout(beneficiaryCRUDJInternalFrameLayout);
        beneficiaryCRUDJInternalFrameLayout.setHorizontalGroup(
            beneficiaryCRUDJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(beneficiaryCRUDJInternalFrameLayout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 999, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        beneficiaryCRUDJInternalFrameLayout.setVerticalGroup(
            beneficiaryCRUDJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );

        jDesktopPane1.add(beneficiaryCRUDJInternalFrame);
        beneficiaryCRUDJInternalFrame.setBounds(150, 10, 980, 630);

        dependentCRUDJInternalFrame.setClosable(true);
        dependentCRUDJInternalFrame.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        dependentCRUDJInternalFrame.setTitle("dependente");
        dependentCRUDJInternalFrame.setVisible(false);

        jLabel34.setText("nome:");

        jLabel35.setText("grau de parentesco:");

        jLabel36.setText("sexo:");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "masculino", "feminino" }));
        jComboBox7.setSelectedIndex(-1);

        jLabel37.setText("data de nascimento:");

        jLabel38.setText("fone:");

        jLabel39.setText("idade:");

        jLabel61.setText("código:");

        jLabel76.setText("cpf:");

        jButton12.setText("Salvar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton11.setText("Fechar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel81.setText("deficiência:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel76)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel36)
                                    .addGap(82, 82, 82)
                                    .addComponent(jLabel37)
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel39)
                                        .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(28, 28, 28)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel38)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jFormattedTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel61)
                                    .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35)
                                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel81)
                                    .addComponent(jComboBox18, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(17, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel39)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(jLabel81))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton11))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dados", jPanel6);

        javax.swing.GroupLayout dependentCRUDJInternalFrameLayout = new javax.swing.GroupLayout(dependentCRUDJInternalFrame.getContentPane());
        dependentCRUDJInternalFrame.getContentPane().setLayout(dependentCRUDJInternalFrameLayout);
        dependentCRUDJInternalFrameLayout.setHorizontalGroup(
            dependentCRUDJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        dependentCRUDJInternalFrameLayout.setVerticalGroup(
            dependentCRUDJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dependentCRUDJInternalFrameLayout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jDesktopPane1.add(dependentCRUDJInternalFrame);
        dependentCRUDJInternalFrame.setBounds(100, 80, 755, 298);

        incomeTaxJInternalFrame.setTitle("Tabela do Imposto de Renda");
        incomeTaxJInternalFrame.setVisible(false);

        jButton9.setText("Cancelar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Salvar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        incomeTaxJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Valor mínimo (R$)", "Taxa (%)"
            }
        ));
        jScrollPane4.setViewportView(incomeTaxJTable);
        if (incomeTaxJTable.getColumnModel().getColumnCount() > 0) {
            incomeTaxJTable.getColumnModel().getColumn(0).setResizable(false);
            incomeTaxJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton10)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addContainerGap())
        );

        javax.swing.GroupLayout incomeTaxJInternalFrameLayout = new javax.swing.GroupLayout(incomeTaxJInternalFrame.getContentPane());
        incomeTaxJInternalFrame.getContentPane().setLayout(incomeTaxJInternalFrameLayout);
        incomeTaxJInternalFrameLayout.setHorizontalGroup(
            incomeTaxJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        incomeTaxJInternalFrameLayout.setVerticalGroup(
            incomeTaxJInternalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomeTaxJInternalFrameLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.add(incomeTaxJInternalFrame);
        incomeTaxJInternalFrame.setBounds(390, 140, 500, 400);

        jMenu1.setText("Arquivo");

        jMenuItem3.setText("Adicionar beneficiário");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Ver beneficiário");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem6.setText("Atualizar beneficiário");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator1);

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Opções");

        jMenuItem7.setText("Alterar Tabela do Imposto de Renda");
        jMenuItem7.setEnabled(false);
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Salvar documento digital");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem11.setText("Cadastrar usuário");
        jMenuItem11.setEnabled(false);
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuItem16.setText("Iniciar Recenseamento Anual");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem16);

        jMenuBar1.add(jMenu3);

        jMenu6.setText("Relatórios");

        jMenuItem12.setText("Beneficiários");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem12);

        jMenuItem13.setText("Dependentes");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem13);

        jMenuItem14.setText("Beneficiários não recadastrados");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem14);

        jMenuItem15.setText("Falecidos");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem15);

        jMenuBar1.add(jMenu6);

        jMenu4.setText("Ajuda");

        jMenuItem2.setText("Sobre");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar1.add(jMenu4);

        jMenu5.setEnabled(false);

        buttonGroup1.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Utilizar banco de dados");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jRadioButtonMenuItem1);

        buttonGroup1.add(jRadioButtonMenuItem2);
        jRadioButtonMenuItem2.setText("Utilizar arquivo");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jRadioButtonMenuItem2);

        jMenuItem9.setText("Informar senha do 'admin'");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem9);

        jMenuItem10.setText("Testar senha do 'admin'");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        aboutJFrame = new AboutJFrame();
        aboutJFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow
        dispose();
    }//GEN-LAST:event_closeWindow

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        searchJInternalFrame.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        fillSearchJTable( funprefController.findText( jTextField1.getText(), updatingSourceBeneficiary ) );
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        beneficiaryCRUDJInternalFrame.setVisible(false);
        currentBeneficiary = null;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void readDependentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readDependentJButtonActionPerformed
        if( (dependentsJTable.getSelectedRow() >= 0 ) && (!(dependentsJTable.getValueAt(dependentsJTable.getSelectedRow(),0)).toString().isEmpty() ) ) {                  
            Dependent dependent;

            dependentCRUDMode = DependentCRUD.READ;

            beneficiaryCRUDJInternalFrame.setVisible(false);
            jButton12.setVisible(false);
            dependent = funprefController.getDependentByCode(Integer.parseInt( dependentsJTable.getValueAt( dependentsJTable.getSelectedRow(), 0 ).toString() ));
            preFillDependentCRUDJInternalFrame();
            fillDependentCRUDJInternalFrame(dependent);
            setEditableDependentCRUDJInternalFrame(false);
            dependentCRUDJInternalFrame.setVisible(true);                
        }
    }//GEN-LAST:event_readDependentJButtonActionPerformed

    private void updateDependentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDependentJButtonActionPerformed
        if( (dependentsJTable.getSelectedRow() >= 0 ) && (!(dependentsJTable.getValueAt(dependentsJTable.getSelectedRow(),0)).toString().isEmpty() ) ) {                  
            Dependent dependent;

            dependentCRUDMode = DependentCRUD.UPDATE;

            beneficiaryCRUDJInternalFrame.setVisible(false);
            jButton12.setVisible(true);
            dependent = funprefController.getDependentByCode(Integer.parseInt( dependentsJTable.getValueAt( dependentsJTable.getSelectedRow(), 0 ).toString() ));
            preFillDependentCRUDJInternalFrame();
            fillDependentCRUDJInternalFrame(dependent);
            setEditableDependentCRUDJInternalFrame(true);
            dependentCRUDJInternalFrame.setVisible(true);
        }        
    }//GEN-LAST:event_updateDependentJButtonActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        beneficiaryCRUDJInternalFrame.setVisible(true);
        dependentCRUDJInternalFrame.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        saveDependentCRUDJInternalFrame();
        updateDependentsJTable( currentBeneficiary );
        beneficiaryCRUDJInternalFrame.setVisible(true);
        dependentCRUDJInternalFrame.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void createDependentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDependentJButtonActionPerformed
        dependentCRUDMode = DependentCRUD.CREATE;

        beneficiaryCRUDJInternalFrame.setVisible(false);
        jButton12.setVisible(true);
        clearDependentCRUDJInternalFrame();
        preFillDependentCRUDJInternalFrame();

        setEditableDependentCRUDJInternalFrame(true);
        dependentCRUDJInternalFrame.setVisible(true);                
    }//GEN-LAST:event_createDependentJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fillSearchJInternalFrame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
//        if( jTable1.getSelectedRow() >= 0 ) { 
//            if( !jTable1.getValueAt( jTable1.getSelectedRow(), 0 ).toString().isEmpty() ) {
//                CRUDTicketJFrame newTicketJFrame = new CRUDTicketJFrame(this);
//                newTicketJFrame.setTicketNumber( Integer.parseInt( jTable1.getValueAt( jTable1.getSelectedRow(), 0 ).toString() ) );
//                newTicketJFrame.setUsersHashMap(usersHashMap);
//                newTicketJFrame.setPlacesHashMap(placesHashMap);
//                newTicketJFrame.setMode( CRUDTicketJFrame.CRUD.READ );                   
//                newTicketJFrame.setTitle("Visualização");
//                newTicketJFrame.setVisible(true);
//                this.setEnabled(false);
                
                if( (jTable1.getSelectedRow() >= 0 ) && (!(jTable1.getValueAt(jTable1.getSelectedRow(),0)).toString().isEmpty() ) ) {  
                    if( !updatingSourceBeneficiary ) {
                        preFillBeneficiaryCRUDJInternalFrame(); 
                        clearBeneficiaryCRUDJInternalFrame();                        
                        funprefController.readAndFillBeneficiaryCRUDJInternalFrame((int)jTable1.getValueAt(jTable1.getSelectedRow(),0), beneficiaryCRUDMode );
                        jTabbedPane2.setSelectedIndex(0);
                        //clearSearchJInternalFrame();
                        beneficiaryCRUDJInternalFrame.setVisible(true);                    
                    }
                    
                    else {
                        int beneficiaryId = (int)jTable1.getValueAt(jTable1.getSelectedRow(),0);
                        int instituteEnrollment = funprefController.getBeneficiaryEnrollmentById( beneficiaryId );
                        jTextField48.setText( "" + instituteEnrollment );        
                        jTextField49.setText( funprefController.getBeneficiaryNameByEnrollment( instituteEnrollment ) ); 
                        updatingSourceBeneficiary = false;
                        
                    }
                    
                    searchJInternalFrame.setVisible(false);
                }
                

//            }
//            else {
//                JOptionPane.showMessageDialog(rootPane, "Selecione um inativo", "Erro", JOptionPane.ERROR_MESSAGE);                 
//            }
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "Selecione um inativo", "Erro", JOptionPane.ERROR_MESSAGE);             
//        }        
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //if( funprefController.revalidateLogin() ) {
        beneficiaryCRUDMode = BeneficiaryCRUD.NEW;
        currentBeneficiary = null;
        preFillBeneficiaryCRUDJInternalFrame();
        clearBeneficiaryCRUDJInternalFrame();
        setEditableBeneficiaryCRUDJInternalFrame(true);
        jTabbedPane2.setSelectedIndex(0);                
        updateBeneficiaryCRUDJInternalFrameTitle( currentBeneficiary );
        beneficiaryCRUDJInternalFrame.setVisible(true);             
        //} 
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //generatePDFOutput();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        fillSearchJInternalFrame();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        //if( funprefController.revalidateLogin() ) {
        beneficiaryCRUDMode = BeneficiaryCRUD.EDIT;
        jButton3.setText("Editar");   
        jTextField1.setText("");
        clearTable(jTable1);
        searchJInternalFrame.setVisible(true);
        //}
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if( verifyBeneficiaryCRUDJInternalFrame()) {
            saveBeneficiaryCRUDJInternalFrame();
            //beneficiaryCRUDJInternalFrame.setVisible(false);
            //currentBeneficiary = null;
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        jButton6.setEnabled(jCheckBox6.isSelected());
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jTextField26.setEditable(jCheckBox2.isSelected());
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        jComboBox8.setEnabled(jCheckBox3.isSelected());
        jTextField29.setEditable(jCheckBox3.isSelected());
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        jTextField27.setEditable(jCheckBox4.isSelected());
        jTextField34.setEditable(jCheckBox4.isSelected());
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        jTextField28.setEditable(jCheckBox5.isSelected());
        jTextField30.setEditable(jCheckBox5.isSelected());
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jFormattedTextField4.setEditable(jCheckBox1.isSelected());
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        funprefController.fillIncomeTaxJInternalFrame();
        incomeTaxJInternalFrame.setVisible(true);
//        clearInativeCRUDJInternalFrame();
//        setEditableInativeCRUDJInternalFrame(true);
//        jTabbedPane2.setSelectedIndex(0);
//        inativeCRUDJInternalFrame.setVisible(true); 
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        incomeTaxJInternalFrame.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int status;
        status = funprefController.saveIncomeTax(incomeTaxJTable);
        
        if( status == 0) {
            incomeTaxJInternalFrame.setVisible(false);
        }
        
        else {
            JOptionPane.showMessageDialog(rootPane, "Tabela incorreta", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        
        File sourceFile;
        
        try {            
            if ( currentBeneficiary != null ) {            
                JFileChooser chooser = new JFileChooser(new java.io.File("."));
                chooser.setDialogTitle("Selecione o arquivo contendo o documento digitalizado");
                chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                chooser.setMultiSelectionEnabled(false);

                javax.swing.filechooser.FileFilter filter = new javax.swing.filechooser.FileFilter() {
                    public boolean accept(File f) {
                        return f.isDirectory()
                                || f.getName().toLowerCase().endsWith(
                                ".pdf");
                    }
                    public String getDescription() {
                        return "(*.pdf)";                    
                    }
                };

                chooser.addChoosableFileFilter(filter);
                chooser.setAcceptAllFileFilterUsed(false);  
                chooser.showOpenDialog(this);            
                sourceFile = chooser.getSelectedFile();                        

                if( sourceFile != null ) {            
                    File document = new File("./documents/" + currentBeneficiary.getOrdinance() + "/" + currentBeneficiary.getName() + ".pdf" );
                    document.getParentFile().mkdirs();
                    Files.move(sourceFile.toPath(), document.toPath(),StandardCopyOption.REPLACE_EXISTING);
                    JOptionPane.showMessageDialog(rootPane, "Documento salvo", "FUNPREF", JOptionPane.INFORMATION_MESSAGE);            
                }            
            }
        } catch (IOException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void beneficiaryCRUDJInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_beneficiaryCRUDJInternalFrameClosing
        beneficiaryCRUDJInternalFrame.setVisible(false);
        currentBeneficiary = null;
    }//GEN-LAST:event_beneficiaryCRUDJInternalFrameClosing

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String[] choices = { "ficha do censo", "ficha do censo com data de atualização", "documento digitalizado" };
        String input = (String) JOptionPane.showInputDialog(null, "Documento a imprimir:",
            "FUNPREF", JOptionPane.QUESTION_MESSAGE, null, // Use
                                                                            // default
                                                                            // icon
            choices, // Array of choices
            choices[0]); // Initial choice

        if( input.equals("ficha do censo") ) {
            printBeneficiaryCensusVoucher( false );
        }
        
        else if( input.equals("ficha do censo com data de atualização") ) {
            printBeneficiaryCensusVoucher( true );
        }

        else {
            printDigitalizedDocument();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        
        UserDAO user = new UserDAO();
        CreateUserJFrame createUserJFrame = new CreateUserJFrame();
        
        user = createUserJFrame.getUser();
        
        if( ( user != null ) && (!user.getName().isEmpty() ) ) {        
            //funprefController.getJdbcController().connectDB();
            funprefController.getJdbcController().createUser( user );
        }
        
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jComboBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox12ActionPerformed
        if( jComboBox12.getSelectedItem() != null ) {
            jComboBox13.setModel(funprefController.getCitiesModel( ((ProvinceDAO)jComboBox12.getSelectedItem()).getId() ) );
        }
    }//GEN-LAST:event_jComboBox12ActionPerformed

    private void jComboBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox15ActionPerformed
        if( jComboBox15.getSelectedItem() != null ) {
            jComboBox14.setModel(funprefController.getCitiesModel( ((ProvinceDAO)jComboBox15.getSelectedItem()).getId() )) ;
        }
    }//GEN-LAST:event_jComboBox15ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if((((BenefitTypeDAO)jComboBox1.getSelectedItem()).toString()).compareTo("invalidez") == 0 ) {  
            jTextArea1.setEditable(true);
            jFormattedTextField7.setEditable(true);
            jComboBox17.setEnabled(true);
        }
        
        else {
            if( !jTextArea1.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Com a mudança do 'tipo de benefício', o 'motivo da invalidez' será descartado se as mudanças forem salvas.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

            if( !jFormattedTextField7.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Com a mudança do 'tipo de benefício', a 'data do laudo de invalidez' será descartada se as mudanças forem salvas.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }    
            
            if( jComboBox17.getSelectedIndex() > 0 ) {
                JOptionPane.showMessageDialog(this, "Com a mudança do 'tipo de benefício', a 'deficiência' será descartada se as mudanças forem salvas.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
            
            jTextArea1.setEditable(false);
            jFormattedTextField7.setEditable(false); 
            jComboBox17.setEnabled(false);
        }
        
        if( ((((BenefitTypeDAO)jComboBox1.getSelectedItem()).toString()).equals("pensionista") ) ||
                (((BenefitTypeDAO)jComboBox1.getSelectedItem()).toString()).equals("pensão temporária") ) {  
            jButton13.setEnabled(true);
        }
        
        else {
            jButton13.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox13ActionPerformed

    private void jComboBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jButton3.setText("Selecionar");
        jTextField1.setText("");
        clearTable(jTable1); 
        updatingSourceBeneficiary = true;
        searchJInternalFrame.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

        String password;

        password = JOptionPane.showInputDialog(rootPane, "Insira senha do usuário 'admin' para conferência", "Senha", JOptionPane.QUESTION_MESSAGE);

        //funprefController.getJdbcController().connectDB();
        funprefController.getJdbcController().testAdminPassword( password );

    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed

        String password;

        password = JOptionPane.showInputDialog(rootPane, "Insira senha do usuário 'admin'", "Senha", JOptionPane.QUESTION_MESSAGE);

        //funprefController.getJdbcController().connectDB();
        funprefController.getJdbcController().setAdminPassword( password );

    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        funprefController.generateReportBeneficiary();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        funprefController.generateReportDependent();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        funprefController.generateReportBeneficiaryPending();
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        funprefController.generateReportBeneficiaryDeceased();
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        int optionResult = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja iniciar um recenseamento?", "FUNPREF", JOptionPane.YES_NO_OPTION);
        int returnValue;

        if( optionResult == 0 ) {
            
            if( funprefController.revalidateLogin() ) {
                
                returnValue = funprefController.restartCadastralStatus();

                if( returnValue > 0 ) {
                    JOptionPane.showMessageDialog(rootPane, "Recenseamento reiniciado", "Informação", JOptionPane.INFORMATION_MESSAGE);                
                }

                else {                
                    JOptionPane.showMessageDialog(rootPane, "Falha ao iniciar Recenseamento", "Erro", JOptionPane.ERROR_MESSAGE);                
                }
            }
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FUNPREFJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FUNPREFJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FUNPREFJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FUNPREFJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FUNPREFJFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame beneficiaryCRUDJInternalFrame;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton createDependentJButton;
    private javax.swing.JButton deleteDependentJButton;
    private javax.swing.JInternalFrame dependentCRUDJInternalFrame;
    private javax.swing.JTable dependentsJTable;
    private javax.swing.JInternalFrame incomeTaxJInternalFrame;
    private javax.swing.JTable incomeTaxJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JComboBox<Object> jComboBox1;
    private javax.swing.JComboBox<Object> jComboBox10;
    private javax.swing.JComboBox<Object> jComboBox11;
    private javax.swing.JComboBox<Object> jComboBox12;
    private javax.swing.JComboBox<Object> jComboBox13;
    private javax.swing.JComboBox<Object> jComboBox14;
    private javax.swing.JComboBox<Object> jComboBox15;
    private javax.swing.JComboBox<Object> jComboBox16;
    private javax.swing.JComboBox<Object> jComboBox17;
    private javax.swing.JComboBox<Object> jComboBox18;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<Object> jComboBox4;
    private javax.swing.JComboBox<Object> jComboBox5;
    private javax.swing.JComboBox<Object> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<Object> jComboBox9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JFormattedTextField jFormattedTextField5;
    private javax.swing.JFormattedTextField jFormattedTextField6;
    private javax.swing.JFormattedTextField jFormattedTextField7;
    private javax.swing.JFormattedTextField jFormattedTextField8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField40;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField44;
    private javax.swing.JTextField jTextField45;
    private javax.swing.JTextField jTextField46;
    private javax.swing.JTextField jTextField47;
    private javax.swing.JTextField jTextField48;
    private javax.swing.JTextField jTextField49;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton readDependentJButton;
    private javax.swing.JInternalFrame searchJInternalFrame;
    private javax.swing.JButton updateDependentJButton;
    // End of variables declaration//GEN-END:variables

    private void fillSearchJInternalFrame() {
        beneficiaryCRUDMode = BeneficiaryCRUD.READ;
        jButton3.setText("Ver");
        jTextField1.setText("");
        clearTable(jTable1);
        searchJInternalFrame.setVisible(true);
    }    
    
    private void printBeneficiaryCensusVoucher(boolean printRegisterDate ) {        
        funprefController.printBeneficiaryCensusVoucher( currentBeneficiary, printRegisterDate );        
    }
    
//    private void generatePDFOutput() {
//        try {
//            PdfWriter writer = new PdfWriter("print.pdf");
//            PdfDocument pdf = new PdfDocument(writer);
//            Document document = new Document(pdf);
//            try {
//                
//                Image blazon = new Image( ImageDataFactory.create("./src/resources/about_icon.png"));
//                blazon.scale(0.5f, 0.5f);
//                
//                document.add(new Paragraph("").add(blazon) );
//                
//                PdfFont font = PdfFontFactory.createFont(FontConstants.TIMES_ROMAN);
//                
//                document.add(new Paragraph("Hello World!").setFont(font));
//                
//                // Create a List
//                List list = new List()
//                    .setSymbolIndent(12)
//                    .setListSymbol("\u2022")
//                    .setFont(font);
//                // Add ListItem objects
//                list.add(new ListItem("Never gonna give you up"))
//                    .add(new ListItem("Never gonna let you down"))
//                    .add(new ListItem("Never gonna run around and desert you"))
//                    .add(new ListItem("Never gonna make you cry"))
//                    .add(new ListItem("Never gonna say goodbye"))
//                    .add(new ListItem("Never gonna tell a lie and hurt you"));
//                // Add the list
//                document.add(list);                
//                
//                
//                
//                
//                
//                
//                document.close();                
//                Desktop.getDesktop().open(new File("print.pdf"));
//            } catch (IOException ex) {
//                Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }        
    
    private void printDigitalizedDocument() {
        try {
            
            File document = new File("./documents/" + currentBeneficiary.getOrdinance() + "/" + currentBeneficiary.getName() + ".pdf" );
            
            if(document.exists()) {
                Desktop.getDesktop().open(document);                
            }
            
            else {
                JOptionPane.showMessageDialog(rootPane, "Documento inexistente", "Erro", JOptionPane.ERROR_MESSAGE);                
            }
            
        } catch (IOException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    public void setRemainingDays(int remainingDays) {
        this.setTitle(this.getTitle() + " - " + remainingDays + " dias restantes");
    }

    public void setController(FUNPREFController funprefController) {
       this.funprefController = funprefController;
       readProperties();
    }
    
    private void updateBeneficiaryCRUDJInternalFrameTitle( Beneficiary beneficiary ) {
        if( beneficiary != null ) {
            beneficiaryCRUDJInternalFrame.setTitle("" + beneficiary.getName() + " - " +
                    funprefController.decodeCadastralStatus( beneficiary.getIdCadastralStatus() ) );
        }
        
        else {
            beneficiaryCRUDJInternalFrame.setTitle("Beneficiário");
        }
    }    

    private void fillSearchJTable(ArrayList<ContentSearchTableItensDAO> contentSearchTableItensDAO) {
        clearTable(jTable1);
        
        for( int i = 0; i < contentSearchTableItensDAO.size(); i++ ) {
            jTable1.setValueAt(contentSearchTableItensDAO.get(i).getId(), i, 0);
            jTable1.setValueAt(contentSearchTableItensDAO.get(i).getEnrollment(), i, 1);
            jTable1.setValueAt(contentSearchTableItensDAO.get(i).getName(), i, 2);
        }
    }
    
    private void clearSearchJInternalFrame() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        jTextField1.setText("");
    }    
    
    private void setEditableDependentCRUDJInternalFrame(boolean editable) {
        jTextField38.setEditable(false);
        jTextField20.setEditable(editable);
        jComboBox6.setEnabled(editable);
        jComboBox7.setEnabled(editable);
        jFormattedTextField8.setEditable(editable);
        jTextField22.setEditable(false);
        jTextField21.setEditable(editable);    
        jTextField14.setEditable(editable);
        jComboBox18.setEditable(false);
    }    
    
    public void setEditableBeneficiaryCRUDJInternalFrame(boolean editable) {
        jTextField2.setEditable(editable);
        jTextField3.setEditable(editable);
        
        jComboBox3.setEnabled(editable);
        
        jFormattedTextField3.setEditable(editable);
        
        jComboBox5.setEnabled(editable);
        jCheckBox1.setEnabled(editable);        

        jFormattedTextField4.setEditable(false);
        
        jTextField5.setEditable(editable);
        
        jFormattedTextField5.setEditable(editable);
        jComboBox9.setEnabled(editable);
        jComboBox10.setEnabled(editable);
        jTextField6.setEditable(editable);
        
        jTextField7.setEditable(editable);
        jTextField8.setEditable(editable);
        jTextField41.setEditable(editable);
        jTextField42.setEditable(editable);        
        
        jComboBox1.setEnabled(editable);    
        jComboBox2.setEnabled(false);    
        
        jFormattedTextField1.setEditable(editable);    
        jFormattedTextField2.setEditable(editable);    
        jFormattedTextField6.setEditable(editable);    
        
        jTextField9.setEditable(false);
        jTextField10.setEditable(false);        
        jTextField11.setEditable(false);  
        
        jTextField47.setEditable(editable);
        jTextField12.setEditable(editable);    
        jTextField4.setEditable(editable);    
        
        jComboBox4.setEnabled(editable);      
        
        jTextArea1.setEditable(false);    
        jFormattedTextField7.setEditable(false);
        jComboBox17.setEnabled(false);
        
        jTextField23.setEditable(editable);    
        jTextField24.setEditable(editable);    
        
        jTextField25.setEditable(false);    
        
        jCheckBox2.setEnabled(false);
        jTextField26.setEditable(false);  
        
        jCheckBox3.setEnabled(false);        
        
        jComboBox8.setEnabled(false);   
        jTextField29.setEditable(false);  
        
        jCheckBox4.setEnabled(false);            

        jTextField27.setEditable(false);  
        jTextField34.setEditable(false);  
        
        jCheckBox5.setEnabled(false);              
      
        jTextField28.setEditable(false);  
        jTextField30.setEditable(false);  

        jTextField32.setEditable(false);  
        jTextField33.setEditable(false);  
        
        jCheckBox6.setEnabled(false);
        jTextField31.setEditable(false);  
        jButton6.setEnabled(false);
        
        jTextField35.setEditable(false);  
        jTextField36.setEditable(false);  
        jTextField37.setEditable(false);  
        
        jTextField13.setEditable(editable);  
        jComboBox14.setEnabled(editable);
        jComboBox15.setEnabled(editable);        
        
        jTextField17.setEditable(editable);  
        jTextField15.setEditable(editable);  
        jTextField16.setEditable(editable);  
        jTextField18.setEditable(editable); 
        jComboBox11.setEnabled(editable);
        jComboBox12.setEnabled(editable);
        jComboBox13.setEnabled(editable);
        jComboBox14.setEnabled(editable);
        jComboBox15.setEnabled(editable);
        
        
        jTextField19.setEditable(editable);  
        jTextField39.setEditable(editable);
        jTextField40.setEditable(editable);
        
        jTextField43.setEditable(editable);
        jTextField44.setEditable(editable);
        jTextField45.setEditable(editable);        
        jTextField46.setEditable(editable);        
        
        jButton8.setVisible(editable);
        
        jComboBox16.setEnabled(editable);        
        
        createDependentJButton.setVisible(editable);
        updateDependentJButton.setVisible(editable);
        deleteDependentJButton.setVisible(editable);        
    }   
    
    private void clearDependentCRUDJInternalFrame() {
        jTextField38.setText("");
        jTextField20.setText("");
        jComboBox6.setSelectedIndex(-1);
        jComboBox7.setSelectedIndex(-1);
        jFormattedTextField8.setText("");
        jTextField22.setText("");        
        jTextField21.setText(""); 
        jTextField14.setText("");
    }    
    
    private void clearBeneficiaryCRUDJInternalFrame() {
        //this.setTitle("");
        
        jTextField2.setText("");
        jTextField3.setText("");
        
        jComboBox3.setSelectedIndex(-1);
        
        jFormattedTextField3.setText("");
        
        jComboBox5.setSelectedIndex(-1);
        jCheckBox1.setSelected(false);        
        
        jFormattedTextField4.setText("");        
        
        jTextField5.setText("");
        
        jFormattedTextField5.setText("");
        jComboBox9.setSelectedIndex(-1);
        jComboBox10.setSelectedIndex(-1);
        jTextField6.setText("");
        
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField41.setText("");
        jTextField42.setText("");      
        
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(-1);
        
        jFormattedTextField1.setText("");
        jFormattedTextField2.setText("");
        jFormattedTextField6.setText("");
        
        jTextField9.setText("");
        
        jTextField10.setText("");
        
        jTextField47.setText(""); 
        jTextField11.setText("");        
        jTextField12.setText("");
        jTextField4.setText("");
        
        jComboBox4.setSelectedIndex(-1);        

        jTextArea1.setText("");
        jFormattedTextField7.setText("");
        jComboBox17.setSelectedIndex(0);
        
        clearTable(dependentsJTable);
        
        jTextField23.setText("");
        jTextField24.setText("");
        
        jTextField25.setText("");
        
        jCheckBox2.setSelected(false);        
        
        jTextField26.setText("");
                
        jCheckBox3.setSelected(false);
        
        jComboBox8.setSelectedIndex(-1);
        jTextField29.setText("");
        
        jCheckBox4.setSelected(false);
                
        jTextField27.setText("");
        jTextField34.setText("");        
        
        jCheckBox5.setSelected(false);
            
        jTextField28.setText("");
        jTextField30.setText("");

        jTextField32.setText("");
        jTextField33.setText("");
        
        jCheckBox6.setSelected(false);
        
        jTextField31.setText("");
        jButton6.setEnabled(false);
      
        jTextField35.setText("");
        jTextField36.setText("");
        jTextField37.setText("");
        
        jTextField13.setText("");
        jComboBox14.setSelectedIndex(-1);
        jComboBox15.setSelectedIndex(0);
        //jTextField14.setText("");
        
        jTextField17.setText("");
        jTextField15.setText("");
        jTextField16.setText("");
        jTextField18.setText("");
        jComboBox11.setSelectedIndex(-1);
        jComboBox12.setSelectedIndex(0);        
        jComboBox13.setSelectedIndex(-1);
        
        jTextField19.setText("");        
        jTextField39.setText(""); 
        
        jTextField43.setText("");
        jTextField44.setText("");
        jTextField45.setText("");        
        
        jTextField46.setText("");
        
        jTextField48.setText("");        
        jTextField49.setText("");
        jButton13.setEnabled(false);
        
        jComboBox16.setSelectedIndex(-1);
    } 
    
    public void clearTable( JTable table) {
       for (int i = 0; i < table.getRowCount(); i++) {
          for(int j = 0; j < table.getColumnCount(); j++) {
              table.setValueAt("", i, j);
          }
       }
    }    
    
    public void fillIncomeTaxJInternalFrame(ArrayList<Double> incomeTaxValues, ArrayList<Double> incomeTaxRates) {
        
        double value;
        int valueInt;
              
        // clear table
        for (int i = 0; i < incomeTaxJTable.getRowCount(); i++) {
           for(int j = 0; j < incomeTaxJTable.getColumnCount(); j++) {
               incomeTaxJTable.setValueAt("", i, j);
           }
        }        
        
        if( incomeTaxRates.size() == incomeTaxValues.size()) {
            for( int i = 0; i < incomeTaxValues.size(); i++) {
                int counter = 0;
                incomeTaxJTable.setValueAt(incomeTaxValues.get(i), i, counter++);
                value = incomeTaxRates.get(i)*100.0;
                valueInt = (int)(value*100.0);
                value = ((double)valueInt)/100.0;
                incomeTaxJTable.setValueAt(value, i, counter++);                
            }        
        }

        
    }    
    
    private void fillDependentCRUDJInternalFrame(Dependent dependent) {
        jTextField38.setText("" + dependent.getId());
        jTextField20.setText(dependent.getName());
        jComboBox6.setSelectedItem( funprefController.decodeKinship( dependent.getIdKinship() ));
        jComboBox7.setSelectedItem( decodeSex( dependent.getSex() ));
        jFormattedTextField8.setText( formatDate.format( dependent.getBirthDate() ) );
        jTextField22.setText( decodePeriod( dependent.getAge() ) );        
        jTextField21.setText(dependent.getPhone()); 
        jTextField14.setText(dependent.getCpf());
        jComboBox18.setSelectedItem( funprefController.decodeDeficiency( dependent.getIdDeficiency() ) );
    }    
    
    public void fillBeneficiaryCRUDJInternalFrame(Beneficiary beneficiary) {
        currentBeneficiary = beneficiary;
        
        updateBeneficiaryCRUDJInternalFrameTitle( beneficiary );
        
        if( beneficiary.getOrdinance() != null ) {
            jTextField2.setText("" + beneficiary.getOrdinance());
        }
        
        jTextField3.setText("" + beneficiary.getName());
        
        jComboBox3.setSelectedItem( decodeSex( beneficiary.getSex() ) );
        
        jFormattedTextField3.setText( formatDate.format( beneficiary.getBirthDate() ) );
        
        jComboBox5.setSelectedItem( funprefController.decodeMaritalStatus( beneficiary.getIdMaritalStatus()) );
        jCheckBox1.setSelected(beneficiary.isDeceased());
        
        if( beneficiary.isDeceased() ) {
            jFormattedTextField4.setText( formatDate.format( beneficiary.getDeathDate() ) );
            
            if( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) {
                jFormattedTextField4.setEditable(true);
            }
        }
        
        
        jTextField5.setText( beneficiary.getRg() );
        
        if( beneficiary.getRgEmissionDate() != null ) {
            jFormattedTextField5.setText( formatDate.format( beneficiary.getRgEmissionDate() ) );
        }
        
        jComboBox9.setSelectedItem( funprefController.decodeRgIssuingBody( beneficiary.getIdRgIssuingBody() ) );        
        jComboBox10.setSelectedItem( funprefController.decodeProvince( beneficiary.getIdProvinceRg() ) );
        jTextField6.setText("" + beneficiary.getCpf());
        
        jTextField7.setText( beneficiary.getMotherName() );
        jTextField8.setText( beneficiary.getFatherName() );
        
        jComboBox1.setSelectedItem( funprefController.decodeBenefitType( beneficiary.getIdBenefitType() ) );
//        jComboBox2.setSelectedItem( decodeForm( beneficiary.getForm() ) );
        
        if( beneficiary.getAdmissionDate() != null ) {
            jFormattedTextField1.setText( formatDate.format( beneficiary.getAdmissionDate() ) );
        }
        
        if( beneficiary.getInactivationDate() != null ) {
            jFormattedTextField2.setText( formatDate.format( beneficiary.getInactivationDate() ) );
        }
        
        if( beneficiary.getApplicationDate() != null ) {
            jFormattedTextField6.setText( formatDate.format( beneficiary.getApplicationDate() ) );
        }
        
        if( beneficiary.getContributionTime() != null ) {
            jTextField9.setText( decodePeriod( beneficiary.getContributionTime() ) );
        }
        
        if( ( beneficiary.getContributionTimeFUNPREF() != null ) && ( !beneficiary.getContributionTimeFUNPREF().isNegative() ) ) {
            jTextField10.setText( decodePeriod( beneficiary.getContributionTimeFUNPREF() ) );
        }
        
        if( beneficiary.getInactivityTime() != null ) {
            jTextField11.setText( decodePeriod( beneficiary.getInactivityTime() ) );          
        }
        
        jTextField47.setText( "" + beneficiary.getInstituteEnrollment() );
        jTextField12.setText( "" + beneficiary.getRegistration() );
        jTextField4.setText( beneficiary.getOffice() );
        
        jComboBox4.setSelectedItem( funprefController.decodeStockingOrgan( beneficiary.getIdStockingOrgan() ) );        
        
        if((((BenefitTypeDAO)jComboBox1.getSelectedItem()).toString()).compareTo("invalidez") == 0 ) {  
            jTextArea1.setText( beneficiary.getInvalidityReason() );
            
            if( beneficiary.getInvalidityAwardDate() != null ) {
                jFormattedTextField7.setText( formatDate.format( beneficiary.getInvalidityAwardDate() ) );
            }        
        }
        
        jComboBox17.setSelectedItem( funprefController.decodeDeficiency( beneficiary.getIdDeficiency() ) );
        
        // Tela de dependentes
        
        updateDependentsJTable( beneficiary );        
        
        // Tela de Finanças/Endereço/Outros
        jTextField23.setText( beneficiary.getBankAgency() );
        jTextField24.setText( beneficiary.getAccount() );
        
        jTextField25.setText( "" + beneficiary.getEarningsInative() );
        
        jCheckBox2.setSelected(beneficiary.isOldPromotion());
        
        if( beneficiary.isOldPromotion() ) {
            jTextField26.setText("" + beneficiary.getOldPromotionValue());
            
            if( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) {
                jTextField26.setEditable(true);
            }
        }
        
        jCheckBox3.setSelected(beneficiary.isChalkPowder());
        
        if(beneficiary.isChalkPowder()) {
            jComboBox8.setSelectedItem( decodeChalkPowderPercentual( beneficiary.getChalkPowderPercentual() ) );
            jTextField29.setText("" + beneficiary.getChalkPowderValue());
            
            if( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) {
                jComboBox8.setEnabled(true);
                jTextField29.setEditable(true);
            }            
        }
        
        jCheckBox4.setSelected(beneficiary.isMoreOneYear());
        
        if( beneficiary.isMoreOneYear() ) {
            jTextField27.setText("" + (beneficiary.getMoreOneYearPercentual()*100.0) + "%");
            jTextField34.setText("" + beneficiary.getMoreOneYearValue());
            
            if( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) {
                jTextField27.setEditable(true);
                jTextField34.setEditable(true);
            }
        }
        
        jCheckBox5.setSelected(beneficiary.isMoreFiveYear());
        
        if( beneficiary.isMoreFiveYear() ) {            
            jTextField28.setText("" + (beneficiary.getMoreFiveYearPercentual()*100.0) + "%");
            jTextField30.setText("" + beneficiary.getMoreFiveYearValue());
            
            if( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) {
                jTextField28.setEditable(true);
                jTextField30.setEditable(true);                
            }
        }            

        jTextField32.setText("" + (beneficiary.getIncomeTaxRate()*100.0) + "%");
        jTextField33.setText("" + beneficiary.getIncomeTaxValue());
        
        jCheckBox6.setSelected(beneficiary.isPayrollLoan());
        
        if(beneficiary.isPayrollLoan()) {
            jTextField31.setText("" + beneficiary.getPayrollLoanValue());
            jButton6.setEnabled(true);
        }
        
        else {
            jButton6.setEnabled(false);
        }
        
        jTextField35.setText("" + beneficiary.getGrossValue());
        jTextField36.setText("" + beneficiary.getDiscounts());
        jTextField37.setText("" + beneficiary.getNetValue());
        
        jTextField40.setText("" + beneficiary.getNationality());
        jComboBox12.setSelectedItem( funprefController.decodeProvince( beneficiary.getIdProvincePlaceOfBirth() ) );
        jComboBox13.setModel( funprefController.getCitiesModel(beneficiary.getIdProvincePlaceOfBirth()) );
        jComboBox13.setSelectedItem( funprefController.decodeCity(beneficiary.getIdCityPlaceOfBirth() ) );
        
        if( beneficiary.getIdProvinceAddress() >= 0 ) {
            jComboBox15.setSelectedItem( funprefController.decodeProvince( beneficiary.getIdProvinceAddress()) );
        }
        jComboBox14.setModel( funprefController.getCitiesModel(beneficiary.getIdProvinceAddress()) );
        jComboBox14.setSelectedItem( funprefController.decodeCity(beneficiary.getIdCityAddress()) );        
        
        jTextField13.setText("" + beneficiary.getAddress());
        //jTextField14.setText("" + beneficiary.getCity());
        
        jTextField17.setText("" + beneficiary.getZipCode());
        
        if( beneficiary.getPhone1() != null ) { 
            jTextField15.setText(beneficiary.getPhone1());
        }
        
        if( beneficiary.getPhone2() != null ) { 
            jTextField16.setText(beneficiary.getPhone2());
        }
        
        if( beneficiary.getEmail() != null ) { 
            jTextField18.setText(beneficiary.getEmail());
        }
        
        jTextField19.setText("" + beneficiary.getPhysicalDocumentDrawer());        
        jTextField39.setText("" + beneficiary.getIndexPhysicalDocument()); 
        
        jTextField43.setText( beneficiary.getVotersTitle() );
        jTextField44.setText("" + beneficiary.getElectoralZone());
        jTextField45.setText("" + beneficiary.getElectoralSection());
        jComboBox11.setSelectedItem( funprefController.decodeProvince( beneficiary.getIdProvinceElectoralZone() ) );
        
        if( beneficiary.getPisPasep() != null ) {
            jTextField46.setText("" + beneficiary.getPisPasep());
        }
        
        jComboBox16.setSelectedItem( funprefController.decodeDegreeEducation( beneficiary.getIdDegreeOfEducation() ) );
        
        if( beneficiary.getInstituteEnrollment() >= 0 ) {
            jTextField48.setText( "" + beneficiary.getInstituteEnrollment() );        
        }
        
        jTextField49.setText( funprefController.getBeneficiaryNameByEnrollment( beneficiary.getInstituteEnrollment() ) );
        
        if( ( beneficiary.getIdBenefitType() == 2 ) && ( ( beneficiaryCRUDMode == BeneficiaryCRUD.EDIT ) || ( beneficiaryCRUDMode == BeneficiaryCRUD.NEW ) ) ) {
            jButton13.setEnabled(true);                 
        }        
               
        
        //jComboBox10.setSelectedItem( funprefController.decodeProvince( beneficiary.getIdProvinceRg() ) );
    }
    
    private void preFillBeneficiaryCRUDJInternalFrame() {        
        jComboBox5.setModel(this.funprefController.getMaritalStatusModel());    
        jComboBox9.setModel(this.funprefController.getIssuingBodyModel());
        jComboBox10.setModel(this.funprefController.getProvinceModel());
        jComboBox4.setModel(this.funprefController.getStockingOrganModel());
        jComboBox1.setModel(this.funprefController.getBenefitTypeModel()) ;
        jComboBox12.setModel(this.funprefController.getProvinceModel());
        jComboBox11.setModel(this.funprefController.getProvinceModel());
        jComboBox15.setModel(this.funprefController.getProvinceModel());
        jComboBox16.setModel(this.funprefController.getDegreeOfEducationModel());
        jComboBox17.setModel(this.funprefController.getDeficiencyModel());
    }    
    
    private void preFillDependentCRUDJInternalFrame() {
        jComboBox6.setModel(this.funprefController.getKinshipModel());  
        jComboBox18.setModel(this.funprefController.getDeficiencyModel());
    }
    
    private void saveDependentCRUDJInternalFrame() {
        
        Dependent dependent = new Dependent();
        
        if( !jTextField38.getText().isEmpty() ) { // atualização
            dependent.setId( Integer.parseInt( jTextField38.getText() ) );
        }
        
        else { // criação
            dependent.setIdUserCreate(funprefController.getUser().getId());
            dependent.setCreateDate(new Date());
        }        
        
        dependent.setName( jTextField20.getText() );
        dependent.setIdKinship( ((KinshipDAO)jComboBox6.getSelectedItem()).getId() );
        //dependent.degreeOfKinship = encodeDegreeOfKinship( jComboBox6.getSelectedItem().toString() );
        dependent.setSex( encodeSex( jComboBox7.getSelectedItem().toString() ) );
        try {
            dependent.setBirthDate( formatDate.parse( jFormattedTextField8.getText() ) );
        } catch (ParseException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dependent.setAge( Period.between(dependent.getBirthDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),
                    (new Date()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate()));      
        dependent.setPhone( jTextField21.getText() ); 
        dependent.setCpf( jTextField14.getText() );
        dependent.setIdDeficiency( ((DeficiencyDAO)jComboBox18.getSelectedItem()).getId() );
        
        dependent.setIdUserUpdate( funprefController.getUser().getId() );
        dependent.setUpdateDate(new Date());
        
        //currentBeneficiary.getDependents().add(dependent);
        funprefController.saveDependent(dependent);        
    }    
    
    private boolean verifyBeneficiaryCRUDJInternalFrame() {
        String message = "";
        boolean valid = true;
        Date aDate;
        int aValueInt;
        double aValueDouble;
        
        if(jTextField12.getText().isEmpty()) {
            message = message + "O campo 'matrícula' está vazio\n";
            valid = false;
        } 

        else {            
            try {
                aValueInt = Integer.parseInt(jTextField12.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'matrícula' deve conter apenas números\n";
                valid = false;
            }            
        }  
        
        if(jTextField2.getText().isEmpty()) {
            message = message + "O campo 'portaria' está vazio\n";
            valid = false;
        }
        
        if(jTextField3.getText().isEmpty()) {
            message = message + "O campo 'nome' está vazio\n";
            valid = false;
        }        
        
        if(jComboBox3.getSelectedIndex()==-1) {
            message = message + "A opção 'sexo' é inválida\n";
            valid = false;            
        }
        
        if(jFormattedTextField3.getText().isEmpty()) {
            message = message + "O campo 'data de nascimento' está vazio\n";
            valid = false;
        }  
        
        else {
            try {
                aDate = formatDate.parse(jFormattedTextField3.getText());
            } catch (ParseException ex) {
                message = message + "O campo 'data de nascimento' está incorreto\n";
                valid = false;
            }
        }                    
        
        if(jComboBox5.getSelectedIndex()==-1) {
            message = message + "A opção 'estado civil' é inválida\n";
            valid = false;            
        } 
        
        if(jCheckBox1.isSelected()) {
            if(jFormattedTextField4.getText().isEmpty()) {
                message = message + "O campo 'data de óbito' está vazio\n";
                valid = false;
            }   
            
            else {
                try {
                    aDate = formatDate.parse(jFormattedTextField4.getText());
                } catch (ParseException ex) {
                    message = message + "O campo 'data de óbito' está incorreto\n";
                    valid = false;
                }
            }             
        }
        
        if(jTextField5.getText().isEmpty()) {
            message = message + "O campo 'RG' está vazio\n";
            valid = false;
        }         
        
        if(jFormattedTextField5.getText().isEmpty()) {
            message = message + "O campo 'data de emissão' está vazio\n";
            valid = false;
        }
        
        else {
            try {
                aDate = formatDate.parse(jFormattedTextField5.getText());
            } catch (ParseException ex) {
                message = message + "O campo 'data de emissão' está incorreto\n";
                valid = false;
            }
        }         
        
        if(jComboBox9.getSelectedIndex()==-1) {
            message = message + "A opção 'órgão de emissão' é inválida\n";
            valid = false;            
        }         
        
        if(jComboBox10.getSelectedIndex()==-1) {
            message = message + "A opção 'UF do órgão de emissão' é inválida\n";
            valid = false;            
        }        
        
        if(jTextField6.getText().isEmpty()) {
            message = message + "O campo 'CPF' está vazio\n";
            valid = false;
        }         
        
        if(jTextField7.getText().isEmpty()) {
            message = message + "O campo 'nome da mãe' está vazio\n";
            valid = false;
        }           
        
        if(jComboBox1.getSelectedIndex()==-1) {
            message = message + "A opção 'regra' é inválida\n";
            valid = false;            
        }         
        
//        if(jComboBox2.getSelectedIndex()==-1) {
//            message = message + "A opção 'forma de cálculo' é inválida\n";
//            valid = false;            
//        }   
        
        if(jFormattedTextField1.getText().isEmpty()) {
            message = message + "O campo 'data de admissão' está vazio\n";
            valid = false;
        }
        
        else {
            try {
                aDate = formatDate.parse(jFormattedTextField1.getText());
            } catch (ParseException ex) {
                message = message + "O campo 'data de admissão' está incorreto\n";
                valid = false;
            }
        }          

        if(jFormattedTextField2.getText().isEmpty()) {
            message = message + "O campo 'data de inativação' está vazio\n";
            valid = false;
        }
        
        else {
            try {
                aDate = formatDate.parse(jFormattedTextField2.getText());
            } catch (ParseException ex) {
                message = message + "O campo 'data de inativação' está incorreto\n";
                valid = false;
            }
        }        
        
//        if(jFormattedTextField6.getText().isEmpty()) {
//            message = message + "O campo 'data de requerimento' está vazio\n";
//            valid = false;
//        }
//        
//        else {
//            try {
//                aDate = formatDate.parse(jFormattedTextField6.getText());
//            } catch (ParseException ex) {
//                message = message + "O campo 'data de requerimento' está incorreto\n";
//                valid = false;
//            }
//        } 


        if(!jFormattedTextField6.getText().isEmpty()) {
            try {
                aDate = formatDate.parse(jFormattedTextField6.getText());
            } catch (ParseException ex) {
                message = message + "O campo 'data de requerimento' está incorreto\n";
                valid = false;
            }
        }

        if(!jTextField47.getText().isEmpty()) {
            try {
                aValueInt = Integer.parseInt(jTextField47.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'matrícula (ativo)' deve conter apenas números\n";
                valid = false;
            }            
        } 
        
        if(jTextField4.getText().isEmpty()) {
            message = message + "O campo 'cargo' está vazio\n";
            valid = false;
        }   
        
        if(jComboBox4.getSelectedIndex()==-1) {
            message = message + "A opção 'órgão de lotação' é inválida\n";
            valid = false;            
        }  
        
        if(( jComboBox4.getSelectedIndex() != -1 ) && ( jComboBox4.getSelectedItem().toString().compareTo("invalidez") == 0 ) ) {
            if(jTextArea1.getText().isEmpty()) {
                message = message + "O campo 'motivo de invalidez' está vazio\n";
                valid = false;
            }

            if(jFormattedTextField7.getText().isEmpty()) {
                message = message + "O campo 'data do laudo de invalidez' está vazio\n";
                valid = false;
            }
            
            else {
                try {
                    aDate = formatDate.parse(jFormattedTextField7.getText());
                } catch (ParseException ex) {
                    message = message + "O campo 'data do laudo de invalidez' está incorreto\n";
                    valid = false;
                }
            }             
        }
        
        if(jTextField23.getText().isEmpty()) {
            message = message + "O campo 'agência BB' está vazio\n";
            valid = false;
        } 
        
        if(jTextField24.getText().isEmpty()) {
            message = message + "O campo 'conta corrente' está vazio\n";
            valid = false;
        }  

//        if(jTextField25.getText().isEmpty()) {
//            message = message + "O campo 'proventos - inativos (R$)' está vazio\n";
//            valid = false;
//        } 

        if(!jTextField25.getText().isEmpty()) {
            try {
                aValueDouble = Double.parseDouble(jTextField47.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'proventos - inativos (R$)' está preenchido de forma incorreta\n";
                valid = false;
            }             
        } 

        if(jCheckBox2.isSelected()) {
            if(jTextField26.getText().isEmpty()) {
                message = message + "O campo 'valor (R$)' (promoção antiga) está vazio\n";
                valid = false;
            }         
        }   
        
        if(jCheckBox3.isSelected()) {
            if(jComboBox8.getSelectedIndex()==-1) {
                message = message + "A opção 'percentual' (pó de giz) é inválida\n";
                valid = false;            
            } 
            
            if(jTextField29.getText().isEmpty()) {
                message = message + "O campo 'valor (R$)' (pó de giz) está vazio\n";
                valid = false;
            }            
        }  
        
        if(jCheckBox4.isSelected()) {
            if(jTextField27.getText().isEmpty()) {
                message = message + "O campo 'percentual (%)' (anuênio) está vazio\n";
                valid = false;
            } 
            
            if(jTextField34.getText().isEmpty()) {
                message = message + "O campo 'valor (R$)' (anuênio) está vazio\n";
                valid = false;
            }            
        } 
        
        if(jCheckBox5.isSelected()) {
            if(jTextField28.getText().isEmpty()) {
                message = message + "O campo 'percentual (%)' (quinquênio) está vazio\n";
                valid = false;
            } 
            
            if(jTextField30.getText().isEmpty()) {
                message = message + "O campo 'valor (R$)' (quinquênio) está vazio\n";
                valid = false;
            }            
        } 
        
        if(jCheckBox6.isSelected()) {         
            if(jTextField31.getText().isEmpty()) {
                message = message + "O campo 'valor (R$)' (empréstimo consignado) está vazio\n";
                valid = false;
            }            
        }
        
        if(jTextField40.getText().isEmpty()) {
            message = message + "O campo 'nacionalidade' está vazio\n";
            valid = false;
        } 
        
        if(jComboBox13.getSelectedIndex()==-1) {
            message = message + "A opção 'cidade de naturalidade' é inválida\n";
            valid = false;            
        }        
        
        if(jTextField13.getText().isEmpty()) {
            message = message + "O campo 'endereço' está vazio\n";
            valid = false;
        } 
        
        if(jComboBox14.getSelectedIndex()==-1) {
            message = message + "A opção 'cidade' é inválida\n";
            valid = false;            
        }         
        
        if(jTextField17.getText().isEmpty()) {
            message = message + "O campo 'CEP' está vazio\n";
            valid = false;
        }  
        
        if(jTextField19.getText().isEmpty()) {
            message = message + "O campo 'gaveta de documentos físicos' está vazio\n";
            valid = false;
        }
        
        else {            
            try {
                aValueInt = Integer.parseInt(jTextField19.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'gaveta de documentos físicos' deve conter apenas números\n";
                valid = false;
            }            
        }        
        
        if(jTextField39.getText().isEmpty()) {
            message = message + "O campo 'código da pasta física' está vazio\n";
            valid = false;
        }
        
        else {            
            try {
                aValueInt = Integer.parseInt(jTextField39.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'código da pasta física' deve conter apenas números\n";
                valid = false;
            }            
        }        

        if(jTextField43.getText().isEmpty()) {
            message = message + "O campo 'título do eleitor' está vazio\n";
            valid = false;
        }          
        
        if(jTextField44.getText().isEmpty()) {
            message = message + "O campo 'zona eleitoral' está vazio\n";
            valid = false;
        } 
        
        else {
            try {
                aValueInt = Integer.parseInt(jTextField44.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'zona eleitoral' deve conter apenas números\n";
                valid = false;
            }             
        }
        
        if(jTextField45.getText().isEmpty()) {
            message = message + "O campo 'seção eleitoral' está vazio\n";
            valid = false;
        }  
        
        else {
            try {
                aValueInt = Integer.parseInt(jTextField45.getText());
            } catch(NumberFormatException ex) {
                message = message + "O campo 'seção eleitoral' deve conter apenas números\n";
                valid = false;
            }             
        }        
        
//        if(jTextField46.getText().isEmpty()) {
//            message = message + "O campo 'PIS/PASEP' está vazio\n";
//            valid = false;
//        } 
        
        if(jComboBox16.getSelectedIndex()==-1) {
            message = message + "A opção 'grau de formação' é inválida\n";
            valid = false;            
        }        
        
        if( ((BenefitTypeDAO)jComboBox1.getSelectedItem()).getId() == 2 ) { // se for pensionista
            if(jTextField48.getText().isEmpty()) {
                message = message + "O campo 'matrícula do beneficiário de origem' está vazio\n";
                valid = false;
            }            
        }

        if(!valid) {
            JOptionPane.showMessageDialog(rootPane, message, "Erro(s)", JOptionPane.ERROR_MESSAGE);                 
        }        
        
        return valid;
    }    
    
    private void saveBeneficiaryCRUDJInternalFrame() {
        
        Beneficiary beneficiary = null;
        
        if( currentBeneficiary != null ) { // atualização de um beneficiário
            beneficiary = currentBeneficiary;            
        }
        else { // criação de um beneficiário
            beneficiary = new Beneficiary();
            beneficiary.setCreateDate(new Date() );
            beneficiary.setIdUserCreate( funprefController.getUser().getId() );
        }        
        
        beneficiary.setRegistration( Integer.parseInt(jTextField12.getText()));
        beneficiary.setOrdinance( jTextField2.getText() );
        beneficiary.setCpf( jTextField6.getText() );
        beneficiary.setName( jTextField3.getText() );
        
        beneficiary.setSex( encodeSex( jComboBox3.getSelectedItem().toString() ) );     
        
        try {
            beneficiary.setBirthDate( formatDate.parse( jFormattedTextField3.getText() ) );
        } catch (ParseException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if( beneficiary.getIdCadastralStatus() != 2 ) {
            int optionResult = JOptionPane.showConfirmDialog(null, "Essa operação é uma atualização do censo?", "FUNPREF", JOptionPane.YES_NO_OPTION);

            if( optionResult == 0 ) {
                beneficiary.setIdCadastralStatus( 2 );  // recadastramento
                beneficiary.setRegisterDate(new Date()); // informa a data do recadastramento
                beneficiary.setIdUserRegistration(funprefController.getUser().getId());
            }

            else {
                beneficiary.setIdCadastralStatus( 3 );  // atualizado
            }
        }     

        // update number
        // reregistration datetime
        // user registration
        // user update        
        
        beneficiary.setNationality( jTextField40.getText() );
        beneficiary.setIdCityPlaceOfBirth(  ((CityDAO)jComboBox13.getSelectedItem()).getId() );
        beneficiary.setIdProvincePlaceOfBirth( ((CityDAO)jComboBox13.getSelectedItem()).getIdProvince() );
        //beneficiary.setMaritalStatusId(funprefController.encodeMaritalStatus( jComboBox5.getSelectedItem().toString() ) );
        beneficiary.setDeceased( jCheckBox1.isSelected() );        
        
        if( beneficiary.isDeceased() ) {
            try {            
                beneficiary.setDeathDate( formatDate.parse(jFormattedTextField4.getText()) );
            } catch (ParseException ex) {
                Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        else {
            beneficiary.setDeathDate(null);
        }
        
        beneficiary.setAddress( jTextField13.getText() );
        beneficiary.setIdCityAddress(((CityDAO)jComboBox14.getSelectedItem()).getId() );
        beneficiary.setIdProvinceAddress(((CityDAO)jComboBox14.getSelectedItem()).getIdProvince() );
        
        beneficiary.setZipCode( jTextField17.getText() );
        beneficiary.setPhone1( jTextField15.getText() );
        beneficiary.setPhone2( jTextField16.getText() );
        beneficiary.setEmail( jTextField18.getText() );  
        
        beneficiary.setIdDegreeOfEducation(  ((DegreeEducationDAO)jComboBox16.getSelectedItem()).getId() );
        beneficiary.setIdMaritalStatus( ((MaritalStatusDAO)jComboBox5.getSelectedItem()).getId() );
        
        if((((BenefitTypeDAO)jComboBox1.getSelectedItem()).toString()).compareTo("invalidez") == 0 ) {  
            beneficiary.setIdDeficiency( ((DeficiencyDAO)jComboBox17.getSelectedItem()).getId() );
            beneficiary.setInvalidityReason( jTextArea1.getText() );
            try {            
                beneficiary.setInvalidityAwardDate( formatDate.parse(jFormattedTextField7.getText()) );
            } catch (ParseException ex) {
                Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }            
        }
        
        else {
            beneficiary.setIdDeficiency( 1 );
            beneficiary.setInvalidityReason( "" );
            beneficiary.setInvalidityAwardDate( null );
        }
        
        if( !jTextField41.getText().isEmpty() ) {
            beneficiary.setMotherCpf(jTextField41.getText());
        }
        beneficiary.setMotherName( jTextField7.getText() );
        
        if( !jTextField42.getText().isEmpty() ) {
            beneficiary.setFatherCpf(jTextField42.getText());
        } 
        beneficiary.setFatherName( jTextField8.getText() );
        
        beneficiary.setPisPasep( jTextField46.getText() );
        beneficiary.setVotersTitle( jTextField43.getText() );
        beneficiary.setElectoralZone( Integer.parseInt( jTextField44.getText() ) );
        beneficiary.setElectoralSection(Integer.parseInt( jTextField45.getText() ) );
        beneficiary.setIdProvinceElectoralZone( ((ProvinceDAO)jComboBox11.getSelectedItem()).getId() );
        beneficiary.setRg( jTextField5.getText() );       
        
        try {
            beneficiary.setRgEmissionDate( formatDate.parse(jFormattedTextField5.getText()) );
        } catch (ParseException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        beneficiary.setIdRgIssuingBody( ((IssuingBodyDAO)jComboBox9.getSelectedItem()).getId() );   
        beneficiary.setIdProvinceRg(((ProvinceDAO)jComboBox10.getSelectedItem()).getId() );
        
        try {
            beneficiary.setAdmissionDate( formatDate.parse( jFormattedTextField1.getText() ) );
            beneficiary.setInactivationDate( formatDate.parse( jFormattedTextField2.getText() ) );
            
            if( !jFormattedTextField6.getText().isEmpty() ) {
                beneficiary.setApplicationDate( formatDate.parse( jFormattedTextField6.getText() ) );
            }
        } catch (ParseException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        beneficiary.setContributionTime( Period.between(beneficiary.getAdmissionDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),
                    beneficiary.getInactivationDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate()));        
        
        try {
            beneficiary.setContributionTimeFUNPREF( Period.between(formatDate.parse("01/01/1994").toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),
                    beneficiary.getInactivationDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate()) );
        } catch (ParseException ex) {
            Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        beneficiary.setInactivityTime( Period.between(beneficiary.getInactivationDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(),
                (new Date()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate()) );        
        
        beneficiary.setIdBenefitType( ((BenefitTypeDAO)jComboBox1.getSelectedItem()).getId() );
        // calculation form
        beneficiary.setIdStockingOrgan( ((StockingOrganDAO)jComboBox4.getSelectedItem()).getId()  );
        beneficiary.setOffice(jTextField4.getText());
        
        if( !jTextField47.getText().isEmpty() ) {
            beneficiary.setInstituteEnrollment( Integer.parseInt( jTextField47.getText() ) );
        }
        
        beneficiary.setPhysicalDocumentDrawer( Integer.parseInt( jTextField19.getText() ) );
        beneficiary.setIndexPhysicalDocument( Integer.parseInt( jTextField39.getText() ) );
        
        
        //beneficiary.setInstituteEnrollmen(EXIT_ON_CLOSE);
        
//        beneficiary.setRegistration( Integer.parseInt(jTextField12.getText()) );
        

        //beneficiary.setStockingOrgan(encodeStockingOrgan( jComboBox4.getSelectedItem().toString() ));                       
        
//        if(((String)jComboBox1.getSelectedItem()).compareTo("invalidez") == 0 ) {
//            beneficiary.setInvalidityReason( jTextArea1.getText() );
//            try {            
//                beneficiary.setInvalidityAwardDate(formatDate.parse( jFormattedTextField7.getText() ) );
//            } catch (ParseException ex) {
//                Logger.getLogger(FUNPREFJFrame.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            beneficiary.setIdDeficiency( ((DeficiencyDAO)jComboBox17.getSelectedItem()).getId() );
//        }
        
        beneficiary.setBankAgency( jTextField23.getText() );
        beneficiary.setAccount( jTextField24.getText() );
        
        if( !jTextField25.getText().isEmpty() ) {
            beneficiary.setEarningsInative(Double.parseDouble( jTextField25.getText() ));
        }
        
        beneficiary.setOldPromotion(jCheckBox2.isSelected());        
        
        if( beneficiary.isOldPromotion() ) {
            beneficiary.setOldPromotionValue( Double.parseDouble( jTextField26.getText() ) );
        }
        
        beneficiary.setChalkPowder( jCheckBox3.isSelected() );        
        
        if(beneficiary.isChalkPowder()) {
            beneficiary.setChalkPowderPercentual( encodeChalkPowderPercentual( jComboBox8.getSelectedItem().toString() ) );
            beneficiary.setChalkPowderValue( Double.parseDouble( jTextField29.getText() ) );            
        }
        
        beneficiary.setMoreOneYear( jCheckBox4.isSelected() );        
        
        if( beneficiary.isMoreOneYear() ) {
            beneficiary.setMoreOneYearPercentual( encodePercentual( jTextField27.getText() ) );  
            beneficiary.setMoreOneYearValue( Double.parseDouble(jTextField34.getText()) );            
        }
        
        beneficiary.setMoreFiveYear( jCheckBox5.isSelected() );
        
        if( beneficiary.isMoreFiveYear() ) {  
            beneficiary.setMoreFiveYearPercentual( encodePercentual( jTextField28.getText() ) );  
            beneficiary.setMoreFiveYearValue( Double.parseDouble(jTextField30.getText()) );             
        }     
        
        if( !jTextField32.getText().isEmpty() ) {
            beneficiary.setIncomeTaxRate( encodePercentual(jTextField32.getText()) );
        }
        
        if( !jTextField33.getText().isEmpty() ) {
            beneficiary.setIncomeTaxValue( Double.parseDouble(jTextField33.getText()) );
        }

        beneficiary.setPayrollLoan( jCheckBox6.isSelected() );        
        
        if(beneficiary.isPayrollLoan()) {
            beneficiary.setPayrollLoanValue( Double.parseDouble(jTextField31.getText()) );
        }
        
        if( !jTextField35.getText().isEmpty() ) {
            beneficiary.setGrossValue( Double.parseDouble( jTextField35.getText() ) );
        }
        
        if( !jTextField36.getText().isEmpty() ) {
            beneficiary.setDiscounts( Double.parseDouble( jTextField36.getText() ) );
        }
        
        if( !jTextField37.getText().isEmpty() ) {
            beneficiary.setNetValue( Double.parseDouble( jTextField37.getText() ) );
        }


        beneficiary.setPhysicalDocumentDrawer( Short.parseShort( jTextField19.getText() ) ); 
        beneficiary.setIndexPhysicalDocument( Integer.parseInt(jTextField39.getText()) );
        
        if( ((BenefitTypeDAO)jComboBox1.getSelectedItem()).getId() == 2 ) { // se for pensionista
            beneficiary.setInstituteEnrollment( Integer.parseInt( jTextField48.getText() ) );
        }        
        
        beneficiary.setUpdateDate(new Date());
        beneficiary.setIdUserUpdate(funprefController.getUser().getId());
        
        funprefController.saveBeneficiary(beneficiary);
        
        if( beneficiary.getId() < 0 ) {
            beneficiary.setId( funprefController.getLastInsertId() );
        }
        
        JOptionPane.showMessageDialog(rootPane, "Registro salvo com sucesso", "FUNPREF", JOptionPane.INFORMATION_MESSAGE);
        
        updateBeneficiaryCRUDJInternalFrameTitle( beneficiary );
    }    
    
    private double encodeChalkPowderPercentual(String chalkPowderPercentualString) {
        double chalkPowderPercentual;
        
        if( chalkPowderPercentualString.compareTo("10%") == 0 ) {
            chalkPowderPercentual = 0.1;
        }
        
        else {
            chalkPowderPercentual = 0.2;
        }   
        
        return chalkPowderPercentual;
    }    
    
    private String decodeChalkPowderPercentual(double chalkPowderPercentual) {
        
        String chalkPowderPercentualString;
        
        if( chalkPowderPercentual == 0.1 ) {
            chalkPowderPercentualString = "10%";
        }
        
        else {
            chalkPowderPercentualString = "20%";
        }   
        
        return chalkPowderPercentualString;
    }     
    
    private Beneficiary.Sex encodeSex(String sexString) {
        Beneficiary.Sex sex;
        
        if( sexString.compareTo("masculino") == 0 ) {
            sex = Beneficiary.Sex.MALE;
        }
        
        else {
            sex = Beneficiary.Sex.FEMALE;
        }   
        
        return sex;
    }    
    
    private String decodeSex(Beneficiary.Sex sex) {
        
        String sexString = null;
        
        if( sex == Beneficiary.Sex.MALE ) {
            sexString = "masculino";
        }
        
        else if( sex == Beneficiary.Sex.FEMALE ) {
            sexString = "feminino";
        }   
        
        return sexString;
    } 
    
//    private Beneficiary.Form encodeForm(String formString) {
//        Beneficiary.Form form;
//        
//        if( formString.compareTo("anos") == 0 ) {
//            form = Beneficiary.Form.YEARS;
//        }
//        
//        else {
//            form = Beneficiary.Form.YEARS;
//        }   
//        
//        return form;
//    }    
//    
//    private String decodeForm(Beneficiary.Form form) {
//        
//        String formString;
//        
//        if( form == Beneficiary.Form.YEARS ) {
//            formString = "anos";
//        }
//        
//        else {
//            formString = "anos";
//        }   
//        
//        return formString;
//    }    
//    
//    private Beneficiary.StockingOrgan encodeStockingOrgan(String stockingOrganString) {
//        Beneficiary.StockingOrgan stockingOrgan;
//        
//        if( stockingOrganString.compareTo("Secretaria de Educação") == 0 ) {
//            stockingOrgan = Beneficiary.StockingOrgan.EDUCATION_SECRETARY;
//        }
//        
//        else if( stockingOrganString.compareTo("Secretaria de Saúde") == 0 ) {
//            stockingOrgan = Beneficiary.StockingOrgan.HEALTH_SECRETARY ;
//        }
//        
//        else {
//            stockingOrgan = Beneficiary.StockingOrgan.ADMINISTRATION_SECRETARY;                        
//        }
//        
//        return stockingOrgan;
//    }    
//    
//    private String decodeStockingOrgan(Beneficiary.StockingOrgan stockingOrgan) {
//        
//        String stockingOrganString;
//        
//        if( stockingOrgan == Beneficiary.StockingOrgan.EDUCATION_SECRETARY ) {
//            stockingOrganString = "Secretaria de Educação";
//        }
//        
//        else if( stockingOrgan == Beneficiary.StockingOrgan.HEALTH_SECRETARY ) {
//            stockingOrganString = "Secretaria de Saúde";
//        }
//        
//        else {
//            stockingOrganString = "Secretaria de Administração";            
//        }
//        
//        return stockingOrganString;
//    }      
//
//    
//    
//    private Beneficiary.Rule encodeRule(String ruleString) {
//        Beneficiary.Rule rule;
//        
//        if( ruleString.compareTo("idade") == 0 ) {
//            rule = Beneficiary.Rule.AGE;
//        }
//        
//        else if( ruleString.compareTo("invalidez") == 0 ) {
//            rule = Beneficiary.Rule.INVALIDITY;
//        }
//        
//        else if( ruleString.compareTo("pensionista") == 0 ) {
//            rule = Beneficiary.Rule.PENSIONER;
//        }  
//        
//        else {
//            rule = Beneficiary.Rule.SERVICE_CONTRIBUTION_AGE;
//        }          
//        
//        return rule;
//    }    
//    
//    private String decodeRule(Beneficiary.Rule rule) {
//        
//        String ruleString;
//        
//        if( rule == Beneficiary.Rule.AGE ) {
//            ruleString = "idade";
//        }
//        
//        else if( rule == Beneficiary.Rule.INVALIDITY ) {
//            ruleString = "invalidez";
//        }
//        
//        else if( rule == Beneficiary.Rule.PENSIONER ) {
//            ruleString = "pensionista";
//        }  
//        
//        else {
//            ruleString = "contribuição de serviço + idade";
//        }          
//        
//        return ruleString;
//    }   
    
    private double encodePercentual(String percentualString) {
        String subString;
        
        subString = percentualString.substring(0, percentualString.lastIndexOf("%"));
        
        return Double.parseDouble(subString)/100.0;
    }    
    
    private String decodePeriod(Period period) {
        
        String periodString = "";
        
        if( period.getYears() > 0 ) {
            periodString += "" + period.getYears() + " anos";
        }
        
        if( period.getMonths() > 0 ) {
            
            if( !periodString.isEmpty() ) {
                
                if( ( period.getYears() > 0 ) && ( period.getDays() == 0 ) ) {
                    periodString += " e ";
                }
                
                else {                
                    periodString += ", ";
                }
            }
            
            periodString += "" + period.getMonths() + " meses";
        }    
        
        if( period.getDays() > 0 ) {
            
            if( !periodString.isEmpty() ) {
                periodString += " e ";
            }
            
            periodString += "" + period.getDays() + " dias";
        }         
        
        return periodString;
    }    

    private void readProperties() {
        jMenu5.setVisible(funprefController.propertiesController.debugMenu);        
        
        jMenuItem1.setSelected(funprefController.propertiesController.useDB);
        jMenuItem2.setSelected(!funprefController.propertiesController.useDB);
    }
    
    private void updateDependentsJTable(Beneficiary beneficiary) {
        clearTable(dependentsJTable);
        
        for( int i = 0; i < beneficiary.getDependents().size(); i++) {
            int counter = 0;
            dependentsJTable.setValueAt(beneficiary.getDependents().get(i).getId(), i, counter++);
            dependentsJTable.setValueAt(beneficiary.getDependents().get(i).getName(), i, counter++);
            dependentsJTable.setValueAt( funprefController.decodeKinship(beneficiary.getDependents().get(i).getIdKinship() ), i, counter++);
        }
    }    
}



